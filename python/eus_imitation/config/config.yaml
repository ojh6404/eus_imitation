control:
  rate: 10
  action_type: "end_effector" # end_effector (x,y,z,r,p,y), angle_vector (seq of joint angle)
  joints: ["test"]
  message_filters:
    slop: 0.1
    queue_size: 1000
  # # conrol_type: collector


obs: # input into policy
  image:
    modality: "ImageModality"
    topic_name: "/kinect_head/rgb/image_rect_color/compressed"
    msg_type: "CompressedImage"
    obs_encoder:
      normalize: True
      model: "VariationalAutoEncoder"
      model_path: "./vae_model.pth"
      pretrained: True
      input_dim: [224, 224, 3]
      output_dim: 16
      has_decoder: True
  robot_ee_pos:
    modality: "FloatVectorModality"
    topic_name: "/eus_imitation/robot_state"
    msg_type: "Float32MultiArrayStamped"
    obs_encoder:
      normalize: True
      input_dim: 4
      output_dim: 4
      layer_dims: null
      activation: "ReLU" # [ReLU, Tanh...]
action:
  modality: "FloatVectorModality"
  topic_name: "/eus_imitation/robot_action"
  msg_type: "Float32MultiArrayStamped"
  dim: 4

network:
  policy:
    model: "RNNActor"
    rnn:
      type: "LSTM"
      rnn_num_layers: 2
      rnn_hidden_dim: 400
      seq_length: 10
    mlp_layer_dims: [128, 128, 128]
    mlp_activation: "ReLU"
    train:
      lr: 1e-4
      lr_scheduler: True
      optimizer: "Adam"
      batch_size: 128
      seq_length: 10 # equal to rnn seq_length if RNNActor
      weight:
        l1: 0.0
        l2: 1.0


dataset:
  rosbag:
    message_filters:
      slop: 0.1
      queue_size: 1000
  data:
    env_args:
      env_name: "Stack"
      type: "env_version"
      robot: "PR2"
      camera_depths: False
      env_kwargs:
        has_renderer: False
        has_offscreen_renderer: False
        ignore_done: True
        use_camera_obs: True
        control_freq: 10
        controller_configs:
          type: "IK"
    obs: # input into policy
      image:
        modality: "ImageModality"
        topic_name: "/kinect_head/rgb/image_rect_color/compressed"
        msg_type: "CompressedImage"
        obs_encoder:
          pretrained: False
          input_dim: [224, 224, 3]
          output_dim: 16 # latent dim
          has_decoder: False
      robot_ee_pos:
        modality: "FloatVectorModality"
        topic_name: "/eus_imitation/robot_state"
        msg_type: "Float32MultiArrayStamped"
        obs_encoder:
          input_dim: 4
          output_dim: 4
          layer_dims: null
          activation: "ReLU" # [ReLU, Tanh...]
    actions:
      modality: "FloatVectorModality"
      topic_name: "/eus_imitation/robot_action"
      msg_type: "Float32MultiArrayStamped"
      dim: 4
