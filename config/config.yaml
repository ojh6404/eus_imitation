control:
  rate: 10
  action_type: "end_effector" # end_effector (x,y,z,r,p,y), angle_vector (seq of joint angle)
  joints: ["test"]
  # # conrol_type: collector

policy:
  model_dir: "test"
  input_topic:
    [
      "/joint_states",
      "/kinect_head/rgb/image_rect_color/compressed",
      "/pr2_imitation/robot_action",
    ]

dataset:
  data:
    obs: # input into policy
      image:
        modality: "rgb"
        topic_name: "/kinect_head/rgb/image_rect_color/compressed"
        msg_type: "CompressedImage"
        image_tune:
          crop_and_resize: True
          crop_x_offset: 100
          crop_y_offset: 40
          crop_height: 400
          crop_width: 300
          height: 224
          width: 224
      robot_ee_pos:
        modality: "low_dim"
        topic_name: "/pr2_data_augmentation/robot_action"
        msg_type: "Float32MultiArrayStamped"
    actions: # output from policy
      robot_ee_pos:
        modality: "low_dim"
        topic_name: "/pr2_data_augmentation/robot_action"
        msg_type: "Float32MultiArrayStamped"
    states: # not into policy, but used for something else
  rosbag:
    message_filters:
      slop: 0.1
      queue_size: 1000
# data
#   total
#   env_args
#   demo_0
#     num_samples
#     model_file
#     states
#     actions (-1 ~ 1)
#     dones
#     rewards
#     obs
#       rgb
#       robot_ee_pos
#       ...
#
#
